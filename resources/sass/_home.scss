@import "_PARTIALS/colours",
        "_PARTIALS/mix_flex-basis-fixed-gutters",
        "_PARTIALS/padding";

//ABOUT
.about {
    text-align: center;
}
.about h2, .text-container h2{
    color: $fso-purple;
}
.about p, .text-container p{
    color: black;
}

.about, .our-services {
    padding-top: $v-pad_lots;
    padding-bottom: $v-pad_lots;
}
.our-services, .get-in-touch {
    background-color: $fso-purple;
    color:white;
}

//OUR SERVICES
.our-services {
    hr {
        color:white;
    }
    .flex-container {
        flex-wrap: wrap;
    }
}
.header-text {
    display: flex;
    flex-wrap: wrap;
    h2 {
        flex-basis: 25%;
        text-transform: uppercase;
    }
    p {
        flex-basis: 75%;
    }
}
.card {
    flex-basis: 100%;
    text-align:center;
    display: flex;
    flex-direction: column;
    min-width: 0;
    text-align:center;
    background: white;
    .text-container {
        padding-top: $v-pad_lots;
        padding-bottom: $v-pad_some;
        position: relative;
    }
}
.card:not(:last-child) {
    margin-bottom: $v-pad_little;
}

/*
.card-banner, .icon {
    display: none;
}
@media (min-width: $bp-xs) {
    .card-banner, .icon {        
        display: initial;
    }
}
*/

@media (min-width: $bp-sm) and (max-width: $bp-md) {
    //Set .cards to 50% width, EXCEPT the last card IF there is an odd-numbered card.
    //Allows the layout to be extended with extra cards if necessary.
    .card:nth-child(2n+1):not(:last-child), .card:nth-child(2n) {             //<=="2n+1" could also be written as "odd"; "2n" could also be written as "even", (OR "2n+0").
        //flex-basis: calc(50% - (#{$gutter-padding} / 2));
        @include flex-basis-fixed-gutters (2, $gutter-padding);
    }
    //Will remove the margin of the last row of .cards.
    .card:nth-of-type(odd):last-child, .card:nth-of-type(odd):nth-last-child(2) {
        margin-bottom: 0;
    }
}
@media (min-width: $bp-md) {
//Once again, the idea is simply that: if you wanted to add more cards to the layout
// the code would respond in kind.
    //.cards expand to fill the width of the container no matter how many there are.
    .card {
        @include flex-basis-fixed-gutters (3, $gutter-padding);
    }
    .card:nth-of-type(3n+2):last-child, .card:nth-of-type(3n+1):nth-last-child(2) {
        @include flex-basis-fixed-gutters (2, $gutter-padding);
    }
    .card:nth-of-type(3n+1):last-child {
        flex-basis: 100%;
    }
    //margin removed from the bottom-most margin of cards.
    //I suppose I could've just given the container a margin and relied on margin-collapse, but, whatever.
    .card:nth-of-type(odd):last-child,
    .card:nth-of-type(3n+2):last-child, .card:nth-of-type(3n+1):nth-last-child(2),
    .card:nth-of-type(3n+1):nth-last-child(3), .card:nth-of-type(3n+2):nth-last-child(2) {
        margin-bottom: 0;
    }
}

.card-banner {
    height:200px;
    object-fit: cover;
}
.icon {
    position: absolute;
    top:0%;
    left:50%;
    transform:translate(-50%,-50%);       //<== Req'd to effectively set the image origin to center; translate moves the image by a distance relative to its width/height.
    background-color: $fso-purple;
    fill: white;
    color: black;                       //<== alt text;
    border-radius: 50%;
    width: 50px;
    height: 50px;
}

//GET IN TOUCH
.get-in-touch {
    display:flex;
    justify-content: space-between;
    padding-top: $v-pad_some;
    padding-bottom: $v-pad_some;
    p {
        flex-basis: 66%;
    }
    a {
        flex-basis: calc(33% - #{$gutter-padding});
        background-color: white;
        border-radius: 8px;
        text-align: center;
        color: $fso-purple;
        font-size: larger;
        font-weight: 700;
        position: relative;
        p {
            margin: 0;
            padding: 0;
            position:absolute;
            top:50%;
            left:50%;
            transform: translate(-50%, -50%);
        }
    }
    // ^^^ This section went through an unreasonable ammount of jank before I finally got it lined up properly.
}